{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\Dokumente\\\\GitHub\\\\_Fullstack-2023-2_meineProjekte\\\\0503todoapp\\\\todoapp\\\\frontend\\\\src\\\\components\\\\editTodo.jsx\",\n  _s = $RefreshSig$();\nimport EditIcon from '@mui/icons-material/Edit';\nimport { EditButton } from '../styled/EditButton';\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { Title } from \"../styled/Title\";\nimport { PinkButton } from \"../styled/PinkButton\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TextField from \"@mui/material/TextField\";\nimport { EditFieldWrap } from '../styled/EditFieldWrap';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff79c6\"\n    },\n    text: {\n      primary: \"#ffff\",\n      secondary: \"#ffff\"\n    }\n  }\n});\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 300,\n  backgroundColor: \"#44475a\",\n  border: \"0.5px solid #6272a4\",\n  borderRadius: \"25px\",\n  padding: \"16px\",\n  color: \"#ffffff\",\n  textAlign: \"center\"\n};\nconst mobileStyle = {\n  ...style,\n  width: \"85%\"\n};\nexport default function ToDoPopUp({\n  todo,\n  todoId\n}) {\n  _s();\n  // Variablen für die MUI Modal Komponente (PopUp)\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const isMobile = useMediaQuery(\"(max-width: 600px)\");\n  const [editTodo, setEditTodo] = React.useState(todo);\n  const editTextRef = useRef();\n  const handleEditTodoChange = event => {\n    setEditTodo(event.target.value);\n  };\n  async function updateTodoInBackend() {\n    const newTodo = editTextRef.current.value;\n    console.log(newTodo);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EditButton, {\n      className: \"editButton\",\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: isMobile ? mobileStyle : style,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Edit To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditFieldWrap, {\n          children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: theme,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"input\",\n              inputRef: editTextRef,\n              id: \"filled-basic\",\n              value: editTodo,\n              onChange: handleEditTodoChange,\n              variant: \"filled\",\n              color: \"primary\",\n              inputProps: {\n                style: {\n                  color: \"#ff79c6\"\n                },\n                maxLength: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PinkButton, {\n            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n              onClick: getEditTodo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PinkButton, {\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              onClick: handleClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoPopUp, \"TP5Yp7oo48L/deXhXJMIhwcSvqQ=\", false, function () {\n  return [useMediaQuery];\n});\n_c = ToDoPopUp;\nvar _c;\n$RefreshReg$(_c, \"ToDoPopUp\");","map":{"version":3,"names":["EditIcon","EditButton","React","useRef","Box","Modal","Title","PinkButton","useMediaQuery","CheckIcon","CloseIcon","TextField","EditFieldWrap","createTheme","ThemeProvider","jsxDEV","_jsxDEV","theme","palette","primary","main","text","secondary","style","position","top","left","transform","width","backgroundColor","border","borderRadius","padding","color","textAlign","mobileStyle","ToDoPopUp","todo","todoId","_s","open","setOpen","useState","handleOpen","handleClose","isMobile","editTodo","setEditTodo","editTextRef","handleEditTodoChange","event","target","value","updateTodoInBackend","newTodo","current","console","log","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","sx","inputRef","id","onChange","variant","inputProps","maxLength","getEditTodo","_c","$RefreshReg$"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/todoapp/frontend/src/components/editTodo.jsx"],"sourcesContent":["import EditIcon from '@mui/icons-material/Edit';\r\nimport { EditButton } from '../styled/EditButton';\r\nimport React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Title } from \"../styled/Title\";\r\nimport { PinkButton } from \"../styled/PinkButton\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { EditFieldWrap } from '../styled/EditFieldWrap';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff79c6\",\r\n    },\r\n    text: {\r\n      primary: \"#ffff\",\r\n      secondary: \"#ffff\",\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  backgroundColor: \"#44475a\",\r\n  border: \"0.5px solid #6272a4\",\r\n  borderRadius: \"25px\",\r\n  padding: \"16px\",\r\n  color: \"#ffffff\",\r\n  textAlign: \"center\",\r\n\r\n};\r\n\r\nconst mobileStyle = {\r\n  ...style,\r\n  width: \"85%\",\r\n};\r\n\r\nexport default function ToDoPopUp({todo, todoId,}) {\r\n// Variablen für die MUI Modal Komponente (PopUp)\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const isMobile = useMediaQuery(\"(max-width: 600px)\");\r\n  const [editTodo, setEditTodo] = React.useState(todo);\r\n  const editTextRef = useRef();\r\n\r\n  const handleEditTodoChange = (event) => {\r\n    setEditTodo(event.target.value);\r\n  };\r\n\r\n async function updateTodoInBackend() {\r\n  const newTodo = editTextRef.current.value;\r\n  console.log(newTodo);\r\n }\r\n\r\n  return (\r\n    <div>\r\n<EditButton className=\"editButton\" onClick={handleOpen}>\r\n<EditIcon/>\r\n</EditButton>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={isMobile ? mobileStyle : style}>\r\n          <Title>Edit To-Do</Title>\r\n          <EditFieldWrap>\r\n          <ThemeProvider theme={theme}>\r\n          {/* ref hook todoTextRef im Textfield */}\r\n          <TextField className=\"input\" inputRef={editTextRef} id=\"filled-basic\" value={editTodo} onChange={handleEditTodoChange} variant=\"filled\" color=\"primary\" inputProps={{ style: { color: \"#ff79c6\" }, maxLength: 100 }}/>\r\n        </ThemeProvider>\r\n          <PinkButton><CheckIcon onClick={getEditTodo}/></PinkButton>\r\n          <PinkButton><CloseIcon onClick={handleClose}/></PinkButton>\r\n          </EditFieldWrap>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}