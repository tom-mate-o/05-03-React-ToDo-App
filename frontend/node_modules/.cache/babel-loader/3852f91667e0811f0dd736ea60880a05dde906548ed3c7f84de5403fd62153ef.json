{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\Dokumente\\\\GitHub\\\\_Fullstack-2023-2_meineProjekte\\\\0503todoapp\\\\src\\\\components\\\\takeInputvalueAndReturn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AddTaskIcon from '@mui/icons-material/AddTask';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\n// Importieren Sie die erforderlichen Variablen aus useLocalStorage\nimport useLocalStorage from './customHooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff79c6\"\n    },\n    text: {\n      primary: \"#ffff\",\n      secondary: \"#ffff\"\n    }\n  }\n});\nexport default function InputAndReturn({\n  todos,\n  setTodos,\n  count\n}) {\n  _s();\n  const todoTextRef = useRef();\n  function InputValueToToDoList() {\n    const newTodo = todoTextRef.current.value;\n    if (newTodo.trim() !== \"\") {\n      setTodos([...todos, newTodo]);\n      localStorage.setItem(\"todos\", JSON.stringify([...todos, newTodo]));\n      todoTextRef.current.value = \"\";\n      count++;\n      // Setzen Sie den Wert von count mithilfe von setCount aus useLocalStorage\n      updateCount(count);\n    }\n  }\n  function clickButtonThenInput(e) {\n    e.preventDefault();\n    InputValueToToDoList();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputField\",\n      children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          inputRef: todoTextRef,\n          className: \"input\",\n          id: \"filled-basic\",\n          label: \"Add ToDo...\",\n          variant: \"filled\",\n          color: \"primary\",\n          inputProps: {\n            style: {\n              color: \"#ff79c6\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickButtonThenInput,\n        children: /*#__PURE__*/_jsxDEV(AddTaskIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(InputAndReturn, \"k5i9kRJXulbx+J272MHN3NZYeu0=\");\n_c = InputAndReturn;\nvar _c;\n$RefreshReg$(_c, \"InputAndReturn\");","map":{"version":3,"names":["React","useRef","TextField","AddTaskIcon","createTheme","ThemeProvider","useLocalStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","palette","primary","main","text","secondary","InputAndReturn","todos","setTodos","count","_s","todoTextRef","InputValueToToDoList","newTodo","current","value","trim","localStorage","setItem","JSON","stringify","updateCount","clickButtonThenInput","e","preventDefault","children","className","inputRef","id","label","variant","color","inputProps","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/src/components/takeInputvalueAndReturn.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport AddTaskIcon from '@mui/icons-material/AddTask';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\n// Importieren Sie die erforderlichen Variablen aus useLocalStorage\r\nimport useLocalStorage from './customHooks/useLocalStorage';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff79c6\",\r\n    },\r\n    text: {\r\n      primary: \"#ffff\",\r\n      secondary: \"#ffff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function InputAndReturn({todos, setTodos, count}) {\r\n  const todoTextRef = useRef();\r\n\r\n  function InputValueToToDoList(){\r\n    const newTodo = todoTextRef.current.value;\r\n    if (newTodo.trim() !== \"\") {\r\n      setTodos([...todos, newTodo]);\r\n      localStorage.setItem(\"todos\", JSON.stringify([...todos, newTodo]));\r\n      todoTextRef.current.value = \"\";\r\n\r\n      count++;\r\n      // Setzen Sie den Wert von count mithilfe von setCount aus useLocalStorage\r\n      updateCount(count);\r\n    }\r\n  }\r\n\r\n  function clickButtonThenInput(e) {\r\n    e.preventDefault();\r\n    InputValueToToDoList();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className=\"inputField\">\r\n        <ThemeProvider theme={theme}>\r\n          <TextField inputRef={todoTextRef} className=\"input\" id=\"filled-basic\" label=\"Add ToDo...\" variant=\"filled\" color=\"primary\" inputProps={{ style: { color: \"#ff79c6\" } }}/>\r\n        </ThemeProvider>\r\n        <button onClick={clickButtonThenInput}><AddTaskIcon/></button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,6BAA6B;AACrD,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;;AAEjE;AACA,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5D,MAAMC,KAAK,GAAGP,WAAW,CAAC;EACxBQ,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE;IACR,CAAC;IACDC,IAAI,EAAE;MACJF,OAAO,EAAE,OAAO;MAChBG,SAAS,EAAE;IACb;EACF;AACF,CAAC,CAAC;AAEF,eAAe,SAASC,cAAcA,CAAC;EAACC,KAAK;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAMC,WAAW,GAAGrB,MAAM,CAAC,CAAC;EAE5B,SAASsB,oBAAoBA,CAAA,EAAE;IAC7B,MAAMC,OAAO,GAAGF,WAAW,CAACG,OAAO,CAACC,KAAK;IACzC,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzBR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,OAAO,CAAC,CAAC;MAC7BI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,GAAGb,KAAK,EAAEM,OAAO,CAAC,CAAC,CAAC;MAClEF,WAAW,CAACG,OAAO,CAACC,KAAK,GAAG,EAAE;MAE9BN,KAAK,EAAE;MACP;MACAY,WAAW,CAACZ,KAAK,CAAC;IACpB;EACF;EAEA,SAASa,oBAAoBA,CAACC,CAAC,EAAE;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBZ,oBAAoB,CAAC,CAAC;EACxB;EAEA,oBACEf,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACE5B,OAAA;MAAM6B,SAAS,EAAC,YAAY;MAAAD,QAAA,gBAC1B5B,OAAA,CAACH,aAAa;QAACM,KAAK,EAAEA,KAAM;QAAAyB,QAAA,eAC1B5B,OAAA,CAACN,SAAS;UAACoC,QAAQ,EAAEhB,WAAY;UAACe,SAAS,EAAC,OAAO;UAACE,EAAE,EAAC,cAAc;UAACC,KAAK,EAAC,aAAa;UAACC,OAAO,EAAC,QAAQ;UAACC,KAAK,EAAC,SAAS;UAACC,UAAU,EAAE;YAAEC,KAAK,EAAE;cAAEF,KAAK,EAAE;YAAU;UAAE;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5J,CAAC,eAChBxC,OAAA;QAAQyC,OAAO,EAAEhB,oBAAqB;QAAAG,QAAA,eAAC5B,OAAA,CAACL,WAAW;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D;EAAC,gBACP,CAAC;AAEP;AAAC3B,EAAA,CA/BuBJ,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}