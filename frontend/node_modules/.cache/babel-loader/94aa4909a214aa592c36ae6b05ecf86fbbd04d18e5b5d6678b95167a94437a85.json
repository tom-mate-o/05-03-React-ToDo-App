{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\Dokumente\\\\GitHub\\\\_Fullstack-2023-2_meineProjekte\\\\0503todoapp\\\\src\\\\components\\\\createAppContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ToDo from './createToDo';\nimport InputAndReturn from './takeInputvalueAndReturn';\nimport FocusToBarOnButtonClick from './focusToBarOnButtonClick';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppContainer() {\n  _s();\n  // useState() hook in dem die ToDos gespeichert werden\n  const [todos, setTodos] = useState([]); // ist von Beginn an leer\n\n  useEffect(() => {\n    // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\n    const storedTodos = JSON.parse(localStorage.getItem(\"todos\")); // getTodos from local storage\n    if (storedTodos) {\n      // wenn storedTodos nicht leer ist, dann\n      setTodos(storedTodos); // füge die ToDos aus dem local storage in das Array ein (setTodos)\n    }\n  }, []); // [] wird übergeben, damit der useEffect() hook nur einmal ausgeführt wird\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputAndReturn, {\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FocusToBarOnButtonClick, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContainer, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = AppContainer;\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["React","useEffect","ToDo","InputAndReturn","FocusToBarOnButtonClick","useState","jsxDEV","_jsxDEV","AppContainer","_s","todos","setTodos","storedTodos","JSON","parse","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/src/components/createAppContainer.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport ToDo from './createToDo'\nimport InputAndReturn from './takeInputvalueAndReturn'\nimport FocusToBarOnButtonClick from './focusToBarOnButtonClick'\nimport { useState } from 'react'\n\n\n\nexport default function AppContainer() {\n  // useState() hook in dem die ToDos gespeichert werden\n  const [todos, setTodos] = useState([]); // ist von Beginn an leer\n\n  useEffect(() => { // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\n    const storedTodos = JSON.parse(localStorage.getItem(\"todos\")); // getTodos from local storage\n    if (storedTodos) { // wenn storedTodos nicht leer ist, dann\n      setTodos(storedTodos); // füge die ToDos aus dem local storage in das Array ein (setTodos)\n    }\n  }, []); // [] wird übergeben, damit der useEffect() hook nur einmal ausgeführt wird\n\n  return (\n    <div className=\"appContainer\">\n    <h1>ToDo</h1>\n    {/* // an die Komponente InputAndReturn werden die ToDos und die Funktion zum setzen der ToDos übergeben */}\n    <InputAndReturn todos={todos} setTodos={setTodos}/>\n    {/* // an die Komponente ToDo werden die ToDos übergeben, die diese dann anzeigt */}\n    <ToDo todos={todos}/>\n    <FocusToBarOnButtonClick/>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIhC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCJ,SAAS,CAAC,MAAM;IAAE;IAChB,MAAMW,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/D,IAAIJ,WAAW,EAAE;MAAE;MACjBD,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC7BX,OAAA;MAAAW,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEbf,OAAA,CAACJ,cAAc;MAACO,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEnDf,OAAA,CAACL,IAAI;MAACQ,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrBf,OAAA,CAACH,uBAAuB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACb,EAAA,CArBuBD,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}