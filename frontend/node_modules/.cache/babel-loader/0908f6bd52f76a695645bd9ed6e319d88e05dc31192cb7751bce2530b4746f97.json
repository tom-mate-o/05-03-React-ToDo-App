{"ast":null,"code":"import axios from \"axios\";\nexport async function updateTodoInDatabase(todoId, updatedText) {\n  try {\n    const config = {\n      method: \"put\",\n      // Hier wird eine PUT-Anfrage gesendet\n      url: `http://localhost:8081/updatetodo/${todoId}`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        todos: updatedText\n      })\n    };\n    const res = await axios(config);\n    console.log(\"Response:\", res.data.message);\n    if (res.status === 200) {\n      return true; // Erfolgreich aktualisiert\n    } else {\n      console.error(\"Error updating todo:\", res.data.message);\n      return false; // Fehler beim Aktualisieren\n    }\n  } catch (error) {\n    console.error(\"Fetch in Frontend failed:\", error);\n    return false; // Fehler beim Aktualisieren\n  }\n}","map":{"version":3,"names":["axios","updateTodoInDatabase","todoId","updatedText","config","method","url","headers","data","JSON","stringify","todos","res","console","log","message","status","error"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/todoapp/frontend/src/utils/updateTodoInDatabase.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function updateTodoInDatabase(todoId, updatedText) {\r\n    try {\r\n        const config = {\r\n            method: \"put\", // Hier wird eine PUT-Anfrage gesendet\r\n            url: `http://localhost:8081/updatetodo/${todoId}`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            data: JSON.stringify({ todos: updatedText }),\r\n        };\r\n\r\n        const res = await axios(config);\r\n        console.log(\"Response:\", res.data.message);\r\n\r\n        if (res.status === 200) {\r\n            return true; // Erfolgreich aktualisiert\r\n        } else {\r\n            console.error(\"Error updating todo:\", res.data.message);\r\n            return false; // Fehler beim Aktualisieren\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Fetch in Frontend failed:\", error);\r\n        return false; // Fehler beim Aktualisieren\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,oBAAoBA,CAACC,MAAM,EAAEC,WAAW,EAAE;EAC5D,IAAI;IACA,MAAMC,MAAM,GAAG;MACXC,MAAM,EAAE,KAAK;MAAE;MACfC,GAAG,EAAG,oCAAmCJ,MAAO,EAAC;MACjDK,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAER;MAAY,CAAC;IAC/C,CAAC;IAED,MAAMS,GAAG,GAAG,MAAMZ,KAAK,CAACI,MAAM,CAAC;IAC/BS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,GAAG,CAACJ,IAAI,CAACO,OAAO,CAAC;IAE1C,IAAIH,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;MACpB,OAAO,IAAI,CAAC,CAAC;IACjB,CAAC,MAAM;MACHH,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEL,GAAG,CAACJ,IAAI,CAACO,OAAO,CAAC;MACvD,OAAO,KAAK,CAAC,CAAC;IAClB;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,KAAK,CAAC,CAAC;EAClB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}