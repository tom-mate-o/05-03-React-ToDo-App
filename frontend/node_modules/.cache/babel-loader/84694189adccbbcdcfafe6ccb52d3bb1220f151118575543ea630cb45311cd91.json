{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\Dokumente\\\\GitHub\\\\_Fullstack-2023-2_meineProjekte\\\\0503todoapp\\\\todoapp\\\\frontend\\\\src\\\\components\\\\createAppContainer.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ToDo from './createToDo';\nimport InputAndReturn from './takeInputvalueAndReturn';\nimport useLocalStorage from './customHooks/useLocalStorage';\nimport ToDoPopUp from './toDoPopUpButton';\nimport { AppContainerWrap } from '../styled/AppContainerWrap';\nimport { Title } from '../styled/Title';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadBackendResponse = async () => {\n  const config = {\n    method: \"get\",\n    url: \"http://localhost:8085/health-check\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const res = await axios(config);\n  console.log(res);\n};\nexport default function AppContainer() {\n  _s();\n  //Costum Hooks\n  const [todos, setTodos] = useLocalStorage('todos', []); // wird mit ToDos aus local storage initialisiert, sind keine vorhanden wird ein leeres Array übergeben\n  const [todosCount, setTodosCount] = useLocalStorage('todosCount', todos.length); // die Anzahl der todos wir aus dem LS geholt. Ist keine vorhanden wird die Länge des Arrays übergeben\n\n  useEffect(() => {\n    loadBackendResponse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContainerWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputAndReturn, {\n      todos: todos,\n      setTodos: setTodos,\n      todosCount: todosCount,\n      setTodosCount: setTodosCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: todos,\n      onDelete: index => {\n        const newTodos = [...todos]; // kopiert das Array todos als newTodos\n        newTodos.splice(index, 1); // mit splice wird das ToDo an der Stelle index gelöscht. 1 steht für die Anzahl der zu löschenden Elemente\n        setTodos(newTodos); // setzt das neue Array newTodos als todos\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToDoPopUp, {\n      todos: todos,\n      setTodos: setTodos,\n      todosCount: todosCount,\n      setTodosCount: setTodosCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContainer, \"SukayF63JqRRz4fHAm8mnh8X8OE=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = AppContainer;\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["React","ToDo","InputAndReturn","useLocalStorage","ToDoPopUp","AppContainerWrap","Title","useEffect","axios","jsxDEV","_jsxDEV","loadBackendResponse","config","method","url","headers","res","console","log","AppContainer","_s","todos","setTodos","todosCount","setTodosCount","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","index","newTodos","splice","_c","$RefreshReg$"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/todoapp/frontend/src/components/createAppContainer.jsx"],"sourcesContent":["import React from 'react'\nimport ToDo from './createToDo'\nimport InputAndReturn from './takeInputvalueAndReturn'\nimport useLocalStorage from './customHooks/useLocalStorage'\nimport ToDoPopUp from './toDoPopUpButton'\nimport { AppContainerWrap } from '../styled/AppContainerWrap'\nimport { Title } from '../styled/Title'\nimport { useEffect } from 'react'\nimport axios from 'axios'\n\nconst loadBackendResponse = async () => {\n  const config = {\n    method: \"get\",\n    url: \"http://localhost:8085/health-check\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const res = await axios(config);\n  console.log(res);\n};\n\n\n\n\n\n\nexport default function AppContainer() {\n  //Costum Hooks\n  const [todos, setTodos] = useLocalStorage('todos', []); // wird mit ToDos aus local storage initialisiert, sind keine vorhanden wird ein leeres Array übergeben\n  const [todosCount, setTodosCount] = useLocalStorage('todosCount', todos.length); // die Anzahl der todos wir aus dem LS geholt. Ist keine vorhanden wird die Länge des Arrays übergeben\n  \n  useEffect(() => {\n    loadBackendResponse();\n  }, []);\n\n  return (\n    <AppContainerWrap>\n    <Title>ToDo</Title>\n    {/* // an die Komponente InputAndReturn werden die ToDos und die Funktion zum setzen der ToDos übergeben inkl Anzahl der Todos*/}\n    <InputAndReturn todos={todos} setTodos={setTodos} todosCount={todosCount} setTodosCount={setTodosCount}/>\n    {/* // an die Komponente ToDo werden die ToDos übergeben, die diese dann anzeigt */}\n    {/* + Inline Function onDelete */}\n    <ToDo todos={todos} onDelete={(index) =>{\n      const newTodos = [...todos]; // kopiert das Array todos als newTodos\n      newTodos.splice(index, 1); // mit splice wird das ToDo an der Stelle index gelöscht. 1 steht für die Anzahl der zu löschenden Elemente\n      setTodos(newTodos); // setzt das neue Array newTodos als todos\n    }}/>\n    <ToDoPopUp todos={todos} setTodos={setTodos} todosCount={todosCount} setTodosCount={setTodosCount}/>\n    </AppContainerWrap>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,oCAAoC;IACzCC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACI,MAAM,CAAC;EAC/BK,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;AAClB,CAAC;AAOD,eAAe,SAASG,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,eAAe,CAAC,YAAY,EAAEkB,KAAK,CAACI,MAAM,CAAC,CAAC,CAAC;;EAEjFlB,SAAS,CAAC,MAAM;IACdI,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACED,OAAA,CAACL,gBAAgB;IAAAqB,QAAA,gBACjBhB,OAAA,CAACJ,KAAK;MAAAoB,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAEnBpB,OAAA,CAACR,cAAc;MAACmB,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACC,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAGzGpB,OAAA,CAACT,IAAI;MAACoB,KAAK,EAAEA,KAAM;MAACU,QAAQ,EAAGC,KAAK,IAAI;QACtC,MAAMC,QAAQ,GAAG,CAAC,GAAGZ,KAAK,CAAC,CAAC,CAAC;QAC7BY,QAAQ,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3BV,QAAQ,CAACW,QAAQ,CAAC,CAAC,CAAC;MACtB;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACJpB,OAAA,CAACN,SAAS;MAACiB,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACC,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEvB;AAACV,EAAA,CAxBuBD,YAAY;EAAA,QAERhB,eAAe,EACLA,eAAe;AAAA;AAAAgC,EAAA,GAH7BhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}