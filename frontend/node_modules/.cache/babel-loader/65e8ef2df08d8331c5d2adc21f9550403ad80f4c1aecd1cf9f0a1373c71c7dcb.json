{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getTodosFromBackend } from '../../utils/getTodosFromBackend';\nimport { set } from 'mongoose';\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n  const [todos, setTodos] = useState(() => {\n    // useState() hook in dem die ToDos gespeichert werden\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage, wandelt den String in ein Array um\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\n  });\n\n  useEffect(() => {\n    // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage, wandeltt das Array in einen String um\n  }, [key, todos]); // sobald sich key oder todos ändern, wird useEffect() ausgeführt\n\n  // UseEffect der prüft, ob der LocalStorage leer ist und danach die ToDos aus der Datenbank lädt\n  useEffect(() => {\n    const todosCount = todos.length; // zählt die ToDos im Array\n\n    if (todosCount === 0) {\n      console.log(\"useEffect_LocalStorage ist leer\");\n      loadTodosFromBackend();\n    }\n  }, [key, todos]);\n\n  //Laden der ToDos aus der Datenbank\n  const loadTodosFromBackend = async () => {\n    try {\n      const backendTodos = await getTodosFromBackend(setTodos);\n    } catch (error) {\n      console.log(\"Ooops, something went wrong, while loading the todos from the backend: \");\n    }\n  };\n  return [todos, setTodos]; // gibt die ToDos und die Funktion zum setzen der ToDos zurück + den Key\n}\n_s(useLocalStorage, \"PPytUowkUP4xfnQbW6iTJWJLwLo=\");","map":{"version":3,"names":["useState","useEffect","getTodosFromBackend","set","useLocalStorage","key","initialValue","_s","todos","setTodos","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","todosCount","length","console","log","loadTodosFromBackend","backendTodos","error"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/todoapp/frontend/src/components/customHooks/useLocalStorage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getTodosFromBackend } from '../../utils/getTodosFromBackend';\r\nimport { set } from 'mongoose';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const [todos, setTodos] = useState(() => { // useState() hook in dem die ToDos gespeichert werden\r\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage, wandelt den String in ein Array um\r\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\r\n  }); \r\n\r\n  useEffect(() => { // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\r\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage, wandeltt das Array in einen String um\r\n  }, [key, todos]); // sobald sich key oder todos ändern, wird useEffect() ausgeführt\r\n\r\n  // UseEffect der prüft, ob der LocalStorage leer ist und danach die ToDos aus der Datenbank lädt\r\n  useEffect(() => {\r\n    const todosCount = todos.length; // zählt die ToDos im Array\r\n\r\n    if (todosCount === 0) {\r\n      console.log(\"useEffect_LocalStorage ist leer\");\r\n      loadTodosFromBackend();\r\n    }\r\n  }, [key, todos]);\r\n\r\n  //Laden der ToDos aus der Datenbank\r\n  const loadTodosFromBackend = async () => {\r\n    try {\r\n      const backendTodos = await getTodosFromBackend(setTodos);\r\n    } catch (error) {\r\n      console.log(\"Ooops, something went wrong, while loading the todos from the backend: \");\r\n    }\r\n  };\r\n\r\n  return [todos, setTodos]; // gibt die ToDos und die Funktion zum setzen der ToDos zurück + den Key\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,GAAG,QAAQ,UAAU;AAE9B,eAAe,SAASC,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAAE;IACzC,MAAMU,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACT,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,OAAOK,WAAW,IAAIJ,YAAY,CAAC,CAAC;EACtC,CAAC,CAAC;;EAEFL,SAAS,CAAC,MAAM;IAAE;IAChBY,YAAY,CAACE,OAAO,CAACV,GAAG,EAAEM,IAAI,CAACK,SAAS,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACH,GAAG,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAC;;EAElB;EACAP,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAGT,KAAK,CAACU,MAAM,CAAC,CAAC;;IAEjC,IAAID,UAAU,KAAK,CAAC,EAAE;MACpBE,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CC,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAAChB,GAAG,EAAEG,KAAK,CAAC,CAAC;;EAEhB;EACA,MAAMa,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMpB,mBAAmB,CAACO,QAAQ,CAAC;IAC1D,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAAC,yEAAyE,CAAC;IACxF;EACF,CAAC;EAED,OAAO,CAACZ,KAAK,EAAEC,QAAQ,CAAC,CAAC,CAAC;AAC5B;AAACF,EAAA,CA9BuBH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}