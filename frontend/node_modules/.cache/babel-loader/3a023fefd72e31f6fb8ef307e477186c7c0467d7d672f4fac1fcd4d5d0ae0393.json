{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\Dokumente\\\\GitHub\\\\_Fullstack-2023-2_meineProjekte\\\\0503todoapp\\\\todoapp\\\\frontend\\\\src\\\\components\\\\takeInputvalueAndReturn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AddTaskIcon from '@mui/icons-material/AddTask';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { PinkButton } from \"../styled/PinkButton\";\nimport { Inputfield } from \"../styled/InputFieldWrap\";\nimport { addTodoToDatabase } from \"../utils/addTodoToDatabase\";\n// import { addTodoListToDatabase } from \"../utils/addTodoListToDatabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff79c6\"\n    },\n    text: {\n      primary: \"#ffff\",\n      secondary: \"#ffff\"\n    }\n  }\n});\nexport default function InputAndReturn({\n  todos,\n  setTodos\n}) {\n  _s();\n  // variable todoTextRef mit useRef()-hook erstellen\n  const todoTextRef = useRef();\n  async function InputValueToToDoList() {\n    const newTodo = todoTextRef.current.value;\n    if (newTodo.trim() !== \"\") {\n      const todoData = {\n        todos: newTodo,\n        name: \"ihr Name\",\n        id: \"2\"\n      };\n      try {\n        await addTodoToDatabase(todoData);\n        // Clear the input field\n        todoTextRef.current.value = \"\";\n        // Reload the page after the data has been successfully saved\n        window.location.reload();\n      } catch (error) {\n        console.error(\"Error adding todo:\", error);\n      }\n    }\n  }\n\n  // clickButtonThenInput() function bei Button onClick\n  function clickButtonThenInput(e) {\n    // wird mit event ausgeführt.\n    e.preventDefault(); // e.preventDefault() verhindert, dass die Seite neu geladen wird\n    console.log(\"click\");\n    // console.log(todoTextRef) greift auf den Wet des Textfields zu (durch den refHook inputRef={todoTextRef})\n    console.log(todoTextRef.current.value);\n    InputValueToToDoList();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Inputfield, {\n      className: \"inputField\",\n      children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          inputRef: todoTextRef,\n          className: \"input\",\n          id: \"filled-basic\",\n          label: \"Add ToDo...\",\n          variant: \"filled\",\n          color: \"primary\",\n          inputProps: {\n            style: {\n              color: \"#ff79c6\"\n            },\n            maxLength: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PinkButton, {\n        onClick: clickButtonThenInput,\n        children: /*#__PURE__*/_jsxDEV(AddTaskIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(InputAndReturn, \"k5i9kRJXulbx+J272MHN3NZYeu0=\");\n_c = InputAndReturn;\nvar _c;\n$RefreshReg$(_c, \"InputAndReturn\");","map":{"version":3,"names":["React","useRef","TextField","AddTaskIcon","createTheme","ThemeProvider","PinkButton","Inputfield","addTodoToDatabase","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","palette","primary","main","text","secondary","InputAndReturn","todos","setTodos","_s","todoTextRef","InputValueToToDoList","newTodo","current","value","trim","todoData","name","id","window","location","reload","error","console","clickButtonThenInput","e","preventDefault","log","children","className","inputRef","label","variant","color","inputProps","style","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/todoapp/frontend/src/components/takeInputvalueAndReturn.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport AddTaskIcon from '@mui/icons-material/AddTask';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { PinkButton } from \"../styled/PinkButton\";\r\nimport { Inputfield } from \"../styled/InputFieldWrap\";\r\nimport { addTodoToDatabase } from \"../utils/addTodoToDatabase\";\r\n// import { addTodoListToDatabase } from \"../utils/addTodoListToDatabase\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff79c6\",\r\n    },\r\n    text: {\r\n      primary: \"#ffff\",\r\n      secondary: \"#ffff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function InputAndReturn({todos, setTodos}) {\r\n  // variable todoTextRef mit useRef()-hook erstellen\r\n  const todoTextRef = useRef();\r\n\r\n\r\n  async function InputValueToToDoList() {\r\n    const newTodo = todoTextRef.current.value;\r\n    if (newTodo.trim() !== \"\") {\r\n      const todoData = {\r\n        todos: newTodo,\r\n        name: \"ihr Name\",\r\n        id: \"2\",\r\n      };\r\n\r\n      try {\r\n        await addTodoToDatabase(todoData);\r\n        // Clear the input field\r\n        todoTextRef.current.value = \"\";\r\n        // Reload the page after the data has been successfully saved\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(\"Error adding todo:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // clickButtonThenInput() function bei Button onClick\r\n  function clickButtonThenInput(e) {  // wird mit event ausgeführt.\r\n    e.preventDefault(); // e.preventDefault() verhindert, dass die Seite neu geladen wird\r\n    console.log(\"click\");\r\n    // console.log(todoTextRef) greift auf den Wet des Textfields zu (durch den refHook inputRef={todoTextRef})\r\n    console.log(todoTextRef.current.value);\r\n    \r\n    InputValueToToDoList();\r\n    \r\n  \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Inputfield className=\"inputField\">\r\n        <ThemeProvider theme={theme}>\r\n          {/* ref hook todoTextRef im Textfield */}\r\n          <TextField inputRef={todoTextRef} className=\"input\" id=\"filled-basic\" label=\"Add ToDo...\" variant=\"filled\" color=\"primary\" inputProps={{ style: { color: \"#ff79c6\" }, maxLength: 100 }}/>\r\n        </ThemeProvider>\r\n        {/* bei onClick wird clickButtonThenInput() ausgeführt */}\r\n        <PinkButton onClick={clickButtonThenInput}><AddTaskIcon/></PinkButton>\r\n      </Inputfield>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}