{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getTodosFromBackend } from '../../utils/getTodosFromBackend';\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n  const [todos, setTodos] = useState(() => {\n    // useState() hook in dem die ToDos gespeichert werden\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage, wandelt den String in ein Array um\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\n  });\n\n  useEffect(() => {\n    if (!localStorage.getItem(key)) {\n      loadTodosFromBackend();\n    }\n  }, [key]);\n  useEffect(() => {\n    // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\n    console.log(\"useEffect\");\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage, wandet das Array in einen String um\n  }, [key, todos]); // sobald sich key oder todos ändern, wird useEffect() ausgeführt\n\n  //Laden der ToDos aus der Datenbank\n  const loadTodosFromBackend = async () => {\n    try {\n      const backendTodos = await getTodosFromBackend();\n      setTodos([...todos, ...backendTodos]);\n    } catch (error) {\n      console.log(\"Ooops, something went wrong, while loading the todos from the backend: \");\n    }\n  };\n  return [todos, setTodos]; // gibt die ToDos und die Funktion zum setzen der ToDos zurück + den Key\n}\n_s(useLocalStorage, \"PPytUowkUP4xfnQbW6iTJWJLwLo=\");","map":{"version":3,"names":["useState","useEffect","getTodosFromBackend","useLocalStorage","key","initialValue","_s","todos","setTodos","storedTodos","JSON","parse","localStorage","getItem","loadTodosFromBackend","console","log","setItem","stringify","backendTodos","error"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/todoapp/frontend/src/components/customHooks/useLocalStorage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getTodosFromBackend } from '../../utils/getTodosFromBackend';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const [todos, setTodos] = useState(() => { // useState() hook in dem die ToDos gespeichert werden\r\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage, wandelt den String in ein Array um\r\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\r\n  }); \r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(key)) {\r\n      loadTodosFromBackend();\r\n    }\r\n  }, [key]);\r\n\r\n  useEffect(() => { // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\r\n    console.log(\"useEffect\");\r\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage, wandet das Array in einen String um\r\n  }, [key, todos]); // sobald sich key oder todos ändern, wird useEffect() ausgeführt\r\n\r\n\r\n  //Laden der ToDos aus der Datenbank\r\n  const loadTodosFromBackend = async () => {\r\n    try {\r\n      const backendTodos = await getTodosFromBackend();\r\n      setTodos([...todos, ...backendTodos]);\r\n    } catch (error) {\r\n      console.log(\"Ooops, something went wrong, while loading the todos from the backend: \");\r\n    }\r\n  };\r\n\r\n  return [todos, setTodos]; // gibt die ToDos und die Funktion zum setzen der ToDos zurück + den Key\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,iCAAiC;AAErE,eAAe,SAASC,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,MAAM;IAAE;IACzC,MAAMS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACT,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,OAAOK,WAAW,IAAIJ,YAAY,CAAC,CAAC;EACtC,CAAC,CAAC;;EAEFJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,YAAY,CAACC,OAAO,CAACT,GAAG,CAAC,EAAE;MAC9BU,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;EAETH,SAAS,CAAC,MAAM;IAAE;IAChBc,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBJ,YAAY,CAACK,OAAO,CAACb,GAAG,EAAEM,IAAI,CAACQ,SAAS,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACH,GAAG,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAC;;EAGlB;EACA,MAAMO,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMK,YAAY,GAAG,MAAMjB,mBAAmB,CAAC,CAAC;MAChDM,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGY,YAAY,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACC,GAAG,CAAC,yEAAyE,CAAC;IACxF;EACF,CAAC;EAED,OAAO,CAACT,KAAK,EAAEC,QAAQ,CAAC,CAAC,CAAC;AAC5B;AAACF,EAAA,CA7BuBH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}