{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport default function useLocalStorage(key, initialValue, todosCountKey) {\n  _s();\n  const [todos, setTodos] = useState(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\n  }); // useState() hook in dem die ToDos gespeichert werden\n\n  useEffect(() => {\n    // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage\n    localStorage.setItem(todosCountKey, JSON.stringify(count));\n  }, [key, todos]);\n  const [count, setCount] = useState(() => {\n    const storedCount = JSON.parse(localStorage.getItem(todosCountKey)); // getTodos from local storage\n    return storedCount !== null ? storedCount : initialValue;\n  });\n  return [todos, setTodos, count, setCount];\n}\n_s(useLocalStorage, \"wlkxXPkDbP0glaK6zrAIzMbQm9s=\");","map":{"version":3,"names":["useState","useEffect","useLocalStorage","key","initialValue","todosCountKey","_s","todos","setTodos","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","count","setCount","storedCount"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/src/components/customHooks/useLocalStorage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, initialValue, todosCountKey) {\r\n  const [todos, setTodos] = useState(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage\r\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\r\n  }); // useState() hook in dem die ToDos gespeichert werden\r\n\r\n\r\n  useEffect(() => { // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\r\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage\r\n    localStorage.setItem(todosCountKey, JSON.stringify(count));\r\n  }, [key, todos]);\r\n\r\n\r\n  const [count, setCount] = useState(() => {\r\n    const storedCount = JSON.parse(localStorage.getItem(todosCountKey)); // getTodos from local storage\r\n      return storedCount !== null ? storedCount : initialValue;\r\n  });\r\n\r\n\r\n  return [todos, setTodos, count, setCount];\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAEC,aAAa,EAAE;EAAAC,EAAA;EACxE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,MAAM;IACvC,MAAMS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACV,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,OAAOM,WAAW,IAAIL,YAAY,CAAC,CAAC;EACtC,CAAC,CAAC,CAAC,CAAC;;EAGJH,SAAS,CAAC,MAAM;IAAE;IAChBW,YAAY,CAACE,OAAO,CAACX,GAAG,EAAEO,IAAI,CAACK,SAAS,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;IAClDK,YAAY,CAACE,OAAO,CAACT,aAAa,EAAEK,IAAI,CAACK,SAAS,CAACC,KAAK,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACb,GAAG,EAAEI,KAAK,CAAC,CAAC;EAGhB,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IACvC,MAAMkB,WAAW,GAAGR,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACR,aAAa,CAAC,CAAC,CAAC,CAAC;IACnE,OAAOa,WAAW,KAAK,IAAI,GAAGA,WAAW,GAAGd,YAAY;EAC5D,CAAC,CAAC;EAGF,OAAO,CAACG,KAAK,EAAEC,QAAQ,EAAEQ,KAAK,EAAEC,QAAQ,CAAC;AAC3C;AAACX,EAAA,CApBuBJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}