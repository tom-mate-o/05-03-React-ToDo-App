{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\Dokumente\\\\GitHub\\\\_Fullstack-2023-2_meineProjekte\\\\0503todoapp\\\\src\\\\components\\\\createAppContainer.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ToDo from './createToDo';\nimport InputAndReturn from './takeInputvalueAndReturn';\nimport useLocalStorage from './customHooks/useLocalStorage';\nimport ToDoPopUp from './toDoPopUpButton';\nimport { Container } from '../styled/AppContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppContainer() {\n  _s();\n  //Costum Hooks\n  const [todos, setTodos] = useLocalStorage('todos', []); // wird mit ToDos aus local storage initialisiert, sind keine vorhanden wird ein leeres Array übergeben\n  const [todosCount, setTodosCount] = useLocalStorage('todosCount', todos.length); // die Anzahl der todos wir aus dem LS geholt. Sind kei\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"top\",\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputAndReturn, {\n      todos: todos,\n      setTodos: setTodos,\n      todosCount: todosCount,\n      setTodosCount: setTodosCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: todos,\n      onDelete: index => {\n        const newTodos = [...todos]; // kopiert das Array todos als newTodos\n        newTodos.splice(index, 1); // mit splice wird das ToDo an der Stelle index gelöscht. 1 steht für die Anzahl der zu löschenden Elemente\n        setTodos(newTodos); // setzt das neue Array newTodos als todos\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToDoPopUp, {\n      todos: todos,\n      setTodos: setTodos,\n      todosCount: todosCount,\n      setTodosCount: setTodosCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContainer, \"RmVHbC/9KK05gdvQnNVltKkgBG8=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = AppContainer;\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["React","ToDo","InputAndReturn","useLocalStorage","ToDoPopUp","Container","jsxDEV","_jsxDEV","AppContainer","_s","todos","setTodos","todosCount","setTodosCount","length","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","index","newTodos","splice","_c","$RefreshReg$"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/src/components/createAppContainer.jsx"],"sourcesContent":["import React from 'react'\nimport ToDo from './createToDo'\nimport InputAndReturn from './takeInputvalueAndReturn'\nimport useLocalStorage from './customHooks/useLocalStorage'\nimport ToDoPopUp from './toDoPopUpButton'\nimport { Container } from '../styled/AppContainer'\n\n\n\n\nexport default function AppContainer() {\n  //Costum Hooks\n  const [todos, setTodos] = useLocalStorage('todos', []); // wird mit ToDos aus local storage initialisiert, sind keine vorhanden wird ein leeres Array übergeben\n  const [todosCount, setTodosCount] = useLocalStorage('todosCount', todos.length); // die Anzahl der todos wir aus dem LS geholt. Sind kei\n  \n\n  return (\n    <Container>\n    <h1 id=\"top\">ToDo</h1>\n    {/* // an die Komponente InputAndReturn werden die ToDos und die Funktion zum setzen der ToDos übergeben */}\n    <InputAndReturn todos={todos} setTodos={setTodos} todosCount={todosCount} setTodosCount={setTodosCount}/>\n    {/* // an die Komponente ToDo werden die ToDos übergeben, die diese dann anzeigt */}\n    {/* + Inline Function onDelete */}\n    <ToDo todos={todos} onDelete={(index) =>{\n      const newTodos = [...todos]; // kopiert das Array todos als newTodos\n      newTodos.splice(index, 1); // mit splice wird das ToDo an der Stelle index gelöscht. 1 steht für die Anzahl der zu löschenden Elemente\n      setTodos(newTodos); // setzt das neue Array newTodos als todos\n    }}/>\n    <ToDoPopUp todos={todos} setTodos={setTodos} todosCount={todosCount} setTodosCount={setTodosCount}/>\n    </Container>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,SAAS,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKlD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,eAAe,CAAC,YAAY,EAAEO,KAAK,CAACI,MAAM,CAAC,CAAC,CAAC;;EAGjF,oBACEP,OAAA,CAACF,SAAS;IAAAU,QAAA,gBACVR,OAAA;MAAIS,EAAE,EAAC,KAAK;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtBb,OAAA,CAACL,cAAc;MAACQ,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACC,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAGzGb,OAAA,CAACN,IAAI;MAACS,KAAK,EAAEA,KAAM;MAACW,QAAQ,EAAGC,KAAK,IAAI;QACtC,MAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAK,CAAC,CAAC,CAAC;QAC7Ba,QAAQ,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3BX,QAAQ,CAACY,QAAQ,CAAC,CAAC,CAAC;MACtB;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACJb,OAAA,CAACH,SAAS;MAACM,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACC,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAEhB;AAACX,EAAA,CArBuBD,YAAY;EAAA,QAERL,eAAe,EACLA,eAAe;AAAA;AAAAsB,EAAA,GAH7BjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}