{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n// import { getTodosFromBackend } from '../../utils/getTodosFromBackend';\n\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n  const [todos, setTodos] = useState(() => {\n    // useState() hook in dem die ToDos gespeichert werden\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage, wandelt den String in ein Array um\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\n  });\n\n  useEffect(() => {\n    // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage, wandet das Array in einen String um\n  }, [key, todos]); // sobald sich key oder todos ändern, wird useEffect() ausgeführt\n\n  return [todos, setTodos]; // gibt die ToDos und die Funktion zum setzen der ToDos zurück + den Key\n}\n_s(useLocalStorage, \"TVD1dXvDEePcCNI2ZeV/a4yOvDw=\");","map":{"version":3,"names":["useState","useEffect","useLocalStorage","key","initialValue","_s","todos","setTodos","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/todoapp/frontend/src/components/customHooks/useLocalStorage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n// import { getTodosFromBackend } from '../../utils/getTodosFromBackend';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const [todos, setTodos] = useState(() => { // useState() hook in dem die ToDos gespeichert werden\r\n    const storedTodos = JSON.parse(localStorage.getItem(key)); // getTodos from local storage, wandelt den String in ein Array um\r\n    return storedTodos || initialValue; // wenn storedTodos nicht leer ist, dann gebe storedTodos zurück, sonst initialValue\r\n  }); \r\n\r\n\r\n\r\n  useEffect(() => { // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\r\n    localStorage.setItem(key, JSON.stringify(todos)); //setTodos to local storage, wandet das Array in einen String um\r\n  }, [key, todos]); // sobald sich key oder todos ändern, wird useEffect() ausgeführt\r\n\r\n\r\n\r\n  return [todos, setTodos]; // gibt die ToDos und die Funktion zum setzen der ToDos zurück + den Key\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;;AAEA,eAAe,SAASC,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,MAAM;IAAE;IACzC,MAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACT,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,OAAOK,WAAW,IAAIJ,YAAY,CAAC,CAAC;EACtC,CAAC,CAAC;;EAIFH,SAAS,CAAC,MAAM;IAAE;IAChBU,YAAY,CAACE,OAAO,CAACV,GAAG,EAAEM,IAAI,CAACK,SAAS,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACH,GAAG,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAC;;EAIlB,OAAO,CAACA,KAAK,EAAEC,QAAQ,CAAC,CAAC,CAAC;AAC5B;AAACF,EAAA,CAfuBH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}