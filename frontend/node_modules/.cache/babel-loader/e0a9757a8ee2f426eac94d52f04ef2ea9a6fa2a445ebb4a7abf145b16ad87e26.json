{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nexport default function useLocalStorage(todos, setTodos) {\n  _s();\n  useEffect(() => {\n    // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\n    const storedTodos = JSON.parse(localStorage.getItem(\"todos\")); // getTodos from local storage\n    if (storedTodos) {\n      // wenn storedTodos nicht leer ist, dann\n      setTodos(storedTodos); // füge die ToDos aus dem local storage in das Array ein (setTodos)\n    }\n  }, []); // [] wird übergeben, damit der useEffect() hook nur einmal ausgeführt wird\n}\n_s(useLocalStorage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["React","useEffect","useLocalStorage","todos","setTodos","_s","storedTodos","JSON","parse","localStorage","getItem"],"sources":["C:/Users/thoma/OneDrive/Dokumente/GitHub/_Fullstack-2023-2_meineProjekte/0503todoapp/src/components/customHooks/useLocalStorage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(todos, setTodos) {\r\nuseEffect(() => { // useEffect() hook wird ausgeführt, wenn sich die ToDos ändern\r\n    const storedTodos = JSON.parse(localStorage.getItem(\"todos\")); // getTodos from local storage\r\n    if (storedTodos) { // wenn storedTodos nicht leer ist, dann\r\n      setTodos(storedTodos); // füge die ToDos aus dem local storage in das Array ein (setTodos)\r\n    }\r\n  }, []); // [] wird übergeben, damit der useEffect() hook nur einmal ausgeführt wird\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAAAC,EAAA;EACzDJ,SAAS,CAAC,MAAM;IAAE;IACd,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/D,IAAIJ,WAAW,EAAE;MAAE;MACjBF,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACV;AAACD,EAAA,CAPuBH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}